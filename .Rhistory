rc <- .External(C_unzip, zipname, topic,
Rdatadir, FALSE, TRUE, FALSE, FALSE)
if (rc == 0L)
zfile <- file.path(Rdatadir, topic)
}
if (zfile != file)
on.exit(unlink(zfile))
switch(ext, R = , r = {
library("utils")
sys.source(zfile, chdir = TRUE, envir = tmp_env)
}, RData = , rdata = , rda = load(zfile,
envir = tmp_env), TXT = , txt = , tab = ,
tab.gz = , tab.bz2 = , tab.xz = , txt.gz = ,
txt.bz2 = , txt.xz = assign(name, my_read_table(zfile,
header = TRUE, as.is = FALSE), envir = tmp_env),
CSV = , csv = , csv.gz = , csv.bz2 = ,
csv.xz = assign(name, my_read_table(zfile,
header = TRUE, sep = ";", as.is = FALSE),
envir = tmp_env), found <- FALSE)
}
if (found)
break
}
if (verbose)
message(if (!found)
"*NOT* ", "found", domain = NA)
}
if (found)
break
}
if (!found) {
warning(gettextf("data set %s not found", sQuote(name)),
domain = NA)
}
else if (!overwrite) {
for (o in ls(envir = tmp_env, all.names = TRUE)) {
if (exists(o, envir = envir, inherits = FALSE))
warning(gettextf("an object named %s already exists and will not be overwritten",
sQuote(o)))
else assign(o, get(o, envir = tmp_env, inherits = FALSE),
envir = envir)
}
rm(tmp_env)
}
}
invisible(names)
}
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
panel_data <- read_xlsx("SADC E Data.xlsx")
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
# Feature selection using correlation
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
correlation_with_gdp <- abs(correlation_matrix[,"GDP"])
selected_features <- names(correlation_with_gdp[correlation_with_gdp > 0.3])
# Update the panel data frame with selected features
panel_data <- panel_data[, c("GDP", selected_features)]
View(panel_data)
View(panel_data)
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
panel_data <- read_xlsx("SADC E Data.xlsx")
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
library(plm)
install.packages("plm")
install.packages("lmtest")
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
panel_data <- read_xlsx("SADC E Data.xlsx")
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
# Summary of fixed effects model
summary(fixed_effects_model)
# Breusch-Pagan test for heteroscedasticity
bptest(fixed_effects_model)
# Hausman test for random effects vs. fixed effects
phtest(fixed_effects_model)
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
panel_data <- read_xlsx("SADC E Data.xlsx")
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
random_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "random")
# Summary of fixed effects model
summary(fixed_effects_model)
# Breusch-Pagan test for heteroscedasticity
bptest(fixed_effects_model)
# Hausman test for random effects vs. fixed effects
phtest(fixed_effects_model,random_effects_model)
panel_data1 <- pdata.frame(panel_data, index = c("Country", "Year"))
View(panel_data1)
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
data <- read_xlsx("SADC E Data.xlsx")
panel_data <- pdata.frame(panel_data, index = c("Country", "Year"))
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
data <- read_xlsx("SADC E Data.xlsx")
panel_data <- pdata.frame(data, index = c("Country", "Year"))
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
random_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "random")
# Summary of fixed effects model
summary(fixed_effects_model)
# Breusch-Pagan test for heteroscedasticity
bptest(fixed_effects_model)
# Hausman test for random effects vs. fixed effects
phtest(fixed_effects_model,random_effects_model)
set.seed(123)
train_indices <- createDataPartition(panel_data$GDP, p = 0.7, list = FALSE)
train_data <- panel_data[train_indices, ]
test_data <- panel_data[-train_indices, ]
# Train the random forest model
rf_model <- randomForest(GDP ~ ., data = train_data, ntree = 100)
install.packages("randomForest")
install.packages("xgboost")
library(randomForest)
library(xgboost)
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
library(randomForest)
library(xgboost)
data <- read_xlsx("SADC E Data.xlsx")
panel_data <- pdata.frame(data, index = c("Country", "Year"))
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
random_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "random")
# Summary of fixed effects model
summary(fixed_effects_model)
# Breusch-Pagan test for heteroscedasticity
bptest(fixed_effects_model)
# Hausman test for random effects vs. fixed effects
phtest(fixed_effects_model,random_effects_model)
set.seed(123)
train_indices <- createDataPartition(panel_data$GDP, p = 0.7, list = FALSE)
train_data <- panel_data[train_indices, ]
test_data <- panel_data[-train_indices, ]
# Train the random forest model
rf_model <- randomForest(GDP ~ ., data = train_data, ntree = 100)
# Predict on the test data
rf_predictions <- predict(rf_model, newdata = test_data)
# Evaluate the model
rf_rmse <- sqrt(mean((rf_predictions - test_data$GDP)^2))
rf_r2 <- cor(rf_predictions, test_data$GDP)^2
# Convert the panel data to a matrix for xgboost
train_matrix <- as.matrix(train_data[, -1])  # Exclude the response variable
test_matrix <- as.matrix(test_data[, -1])  # Exclude the response variable
# Train the gradient boosting model
xgb_model <- xgboost(data = train_matrix, label = train_data$GDP, nrounds = 100)
# Convert the panel data to a numeric matrix
train_matrix <- as.matrix(train_data[, -1])  # Exclude the response variable
test_matrix <- as.matrix(test_data[, -1])  # Exclude the response variable
# Convert the response variable to numeric
train_label <- as.numeric(train_data$GDP)
test_label <- as.numeric(test_data$GDP)
# Train the gradient boosting model
xgb_model <- xgboost(data = train_matrix, label = train_label, nrounds = 100)
install.packages("neuralnet")
# Convert the data to matrix format
train_matrix <- as.matrix(train_data[, -1])  # Exclude the response variable
test_matrix <- as.matrix(test_data[, -1])  # Exclude the response variable
# Scale the predictor variables
train_matrix_scaled <- scale(train_matrix)
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
library(randomForest)
library(xgboost)
library(neuralnet)
data <- read_xlsx("SADC E Data.xlsx")
panel_data <- pdata.frame(data, index = c("Country", "Year"))
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
random_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "random")
# Summary of fixed effects model
summary(fixed_effects_model)
# Breusch-Pagan test for heteroscedasticity
bptest(fixed_effects_model)
# Hausman test for random effects vs. fixed effects
phtest(fixed_effects_model,random_effects_model)
set.seed(123)
train_indices <- createDataPartition(panel_data$GDP, p = 0.7, list = FALSE)
train_data <- panel_data[train_indices, ]
test_data <- panel_data[-train_indices, ]
# Train the random forest model
rf_model <- randomForest(GDP ~ ., data = train_data, ntree = 100)
# Predict on the test data
rf_predictions <- predict(rf_model, newdata = test_data)
# Evaluate the model
rf_rmse <- sqrt(mean((rf_predictions - test_data$GDP)^2))
rf_r2 <- cor(rf_predictions, test_data$GDP)^2
# Convert the data to matrix format
train_matrix <- as.matrix(train_data[, -1])  # Exclude the response variable
test_matrix <- as.matrix(test_data[, -1])  # Exclude the response variable
# Scale the predictor variables
train_matrix_scaled <- scale(train_matrix)
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
library(randomForest)
library(xgboost)
library(neuralnet)
data <- read_xlsx("SADC E Data.xlsx")
panel_data <- pdata.frame(data, index = c("Country", "Year"))
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
random_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "random")
# Summary of fixed effects model
summary(fixed_effects_model)
#testing for heteroscedasticity
bptest(fixed_effects_model)
#testing for random effects vs fixed effects
phtest(fixed_effects_model,random_effects_model)
set.seed(123)
train_indices <- createDataPartition(panel_data$GDP, p = 0.7, list = FALSE)
train_data <- panel_data[train_indices, ]
test_data <- panel_data[-train_indices, ]
rf_model <- randomForest(GDP ~ ., data = train_data, ntree = 100)
rf_predictions <- predict(rf_model, newdata = test_data)
rf_rmse <- sqrt(mean((rf_predictions - test_data$GDP)^2))
rf_r2 <- cor(rf_predictions, test_data$GDP)^2
View(test_data)
View(test_data)
View(train_indices)
View(train_indices)
View(rf_model)
str(panel_data)
sapply(panel_data, class)
View(data)
View(data)
fixed_effects_model <- plm(GDP ~ Inflation + factor(Year) + factor(Country) + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
# Summary of fixed effects model
summary(fixed_effects_model)
fixed_effects_model <- plm(GDP ~ Inflation + factor(Year) + factor(Country) + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = data,
model = "within")
# Summary of fixed effects model
summary(fixed_effects_model)
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
library(randomForest)
library(xgboost)
library(neuralnet)
data <- read_xlsx("SADC E Data.xlsx")
panel_data <- pdata.frame(data, index = c("Country", "Year"))
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
random_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "random")
# Summary of fixed effects model
summary(fixed_effects_model)
#testing for heteroscedasticity
bptest(fixed_effects_model)
#testing for random effects vs fixed effects
phtest(fixed_effects_model,random_effects_model)
set.seed(123)
train_indices <- createDataPartition(panel_data$GDP, p = 0.7, list = FALSE)
train_data <- panel_data[train_indices, ]
test_data <- panel_data[-train_indices, ]
rf_model <- randomForest(GDP ~ ., data = train_data, ntree = 100)
rf_predictions <- predict(rf_model, newdata = test_data)
rf_rmse <- sqrt(mean((rf_predictions - test_data$GDP)^2))
rf_r2 <- cor(rf_predictions, test_data$GDP)^2
lr = lm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = data)
summary(lr)
lr = lm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate + factor(Year),
data = data)
summary(lr)
lr = lm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate + factor(Year) + factor(Country),
data = data)
summary(lr)
#simple plm
plm_lr = plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate + factor(Year),
index = "Country",
model = "within"
data = data)
#simple plm
plm_lr = plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate + factor(Year),
index = "Country",
model = "within",
data = data)
summary(plm_lr)
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
library(randomForest)
library(xgboost)
library(neuralnet)
data <- read_xlsx("SADC E Data.xlsx")
panel_data <- pdata.frame(data, index = c("Country", "Year"))
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
#simple lr
lr = lm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate + factor(Year) + factor(Country),
data = data)
summary(lr)
#simple plm
#plm_lr = plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate + factor(Year),
#index = "Country",
#model = "within",
#data = data)
#summary(plm_lr)
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
random_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "random")
# Summary of fixed effects model
summary(fixed_effects_model)
#testing for heteroscedasticity
bptest(fixed_effects_model)
#testing for random effects vs fixed effects
phtest(fixed_effects_model,random_effects_model)
set.seed(123)
train_indices <- createDataPartition(panel_data$GDP, p = 0.7, list = FALSE)
train_data <- panel_data[train_indices, ]
test_data <- panel_data[-train_indices, ]
rf_model <- randomForest(GDP ~ ., data = train_data, ntree = 100)
rf_predictions <- predict(rf_model, newdata = test_data)
rf_rmse <- sqrt(mean((rf_predictions - test_data$GDP)^2))
rf_r2 <- cor(rf_predictions, test_data$GDP)^2
setwd("C:\\Users\\Dell\\Desktop\\Analysis\\sadc")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(caret)
library(plm)
library(lmtest)
library(randomForest)
library(xgboost)
library(neuralnet)
data <- read_xlsx("SADC E Data.xlsx")
panel_data <- pdata.frame(data, index = c("Country", "Year"))
# print(colnames(panel_data))
summary(panel_data)
colSums(is.na(panel_data))
correlation_matrix <- cor(panel_data[, c("GDP", "Inflation", "Imports", "Exports", "EDebt", "ERate", "IReserves", "LForce", "Unemployment", "FDI", "IRate")])
corrplot(correlation_matrix, method = "color")
#simple lr
lr = lm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate + factor(Year) + factor(Country),
data = data)
summary(lr)
#simple plm
#plm_lr = plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate + factor(Year),
#index = "Country",
#model = "within",
#data = data)
#summary(plm_lr)
fixed_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "within")
random_effects_model <- plm(GDP ~ Inflation + Imports + Exports + EDebt + ERate + IReserves + LForce + Unemployment + FDI + IRate,
data = panel_data,
model = "random")
# Summary of fixed effects model
summary(fixed_effects_model)
#testing for heteroscedasticity
bptest(fixed_effects_model)
#testing for random effects vs fixed effects
phtest(fixed_effects_model,random_effects_model)
set.seed(123)
train_indices <- createDataPartition(panel_data$GDP, p = 0.7, list = FALSE)
train_data <- panel_data[train_indices, ]
test_data <- panel_data[-train_indices, ]
rf_model <- randomForest(GDP ~ ., data = train_data, ntree = 100)
rf_predictions <- predict(rf_model, newdata = test_data)
rf_rmse <- sqrt(mean((rf_predictions - test_data$GDP)^2))
rf_r2 <- cor(rf_predictions, test_data$GDP)^2
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
source("C:/Users/Dell/Desktop/Analysis/sadc/sadc.R")
